name: Deploy to K3s

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build & push Docker image
        run: |
          mkdir -p /tmp/.buildx-cache
          docker buildx build \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache \
            -t jeremi656/adonis-app:latest .
          docker push jeremi656/adonis-app:latest

      - name: Deploy to k3s via kubectl
        run: |
          set -eux
          mkdir -p ~/.ssh
          printf "%s\n" "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts || true

          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/backend-cocktail-api/k8 || exit
            git pull origin main || exit
            export KUBECONFIG=$HOME/.kube/config

            kubectl apply -f public-images-pvc.yaml
            kubectl apply -f env-configmap.yaml
            kubectl apply -f adonis-app/
            kubectl apply -f postgres/
            kubectl apply -f jobs/
            kubectl apply -f hpa.yaml

            kubectl rollout restart deployment/adonis-app
          EOF
